// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id          String       @id @default(cuid())
  name        String       @default("")
  email       String       @unique @default("")
  role        UserRoleType @default(student)
  password    String
  enrollments Enrollment[] @relation("Enrollment_student")
  teachingIn  Course[]     @relation("Course_teacher")
  createdAt   DateTime?    @default(now())

  @@map("users")
}

model Course {
  id                String       @id @default(cuid())
  title             String       @default("")
  description       String       @default("")
  slug              String       @unique @default("")
  thumbnailUrl      String       @default("https://img.freepik.com/vector-gratis/cursos-informatica-educacion-ti-oportunidades-aprendizaje-electronico-tecnologia-seminarios-web-responsable-taller-aprendizaje-online-distancia-e-internet-ilustracion-metafora-concepto-aislado-vector_335657-2830.jpg?w=740&t=st=1670420665~exp=1670421265~hmac=7c2e3cda297c97de576e6270ceed84c15aa7e7611644ce1748d395369a1b754f")
  durationInMinutes Int          @default(1)
  price             Float?       @default(0)
  courseEvaluation  Int?
  enrolledOn        Enrollment[] @relation("Enrollment_course")
  lessons           Lesson[]     @relation("Lesson_course")
  teacher           User?        @relation("Course_teacher", fields: [teacherId], references: [id])
  teacherId         String?      @map("teacher")
  createdAt         DateTime?    @default(now())
  updatedAt         DateTime?    @default(now()) @updatedAt

  @@index([teacherId])
  @@map("courses")
}

model Enrollment {
  id        String    @id @default(cuid())
  student   User?     @relation("Enrollment_student", fields: [studentId], references: [id])
  studentId String?   @map("student")
  course    Course?   @relation("Enrollment_course", fields: [courseId], references: [id])
  courseId  String?   @map("course")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt

  @@index([studentId])
  @@index([courseId])
  @@map("enrollments")
}

model Lesson {
  id          String    @id @default(cuid())
  title       String    @default("")
  description String    @default("")
  slug        String    @unique @default("")
  videoUrl    String    @default("")
  course      Course?   @relation("Lesson_course", fields: [courseId], references: [id])
  courseId    String?   @map("course")
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt

  @@index([courseId])
  @@map("lessons")
}

enum UserRoleType {
  admin
  student
  teacher
}
